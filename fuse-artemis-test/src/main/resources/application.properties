camel.springboot.shutdown-timeout=15
camel.springboot.message-history=false

# https://qpid.apache.org/releases/qpid-jms-0.61.0/docs/index.html#connection-uri
connection.type=AMQP
connection.remoteUrl=amqp://localhost:5672?jms.prefetchPolicy.all=10

# https://access.redhat.com/documentation/en-us/red_hat_amq_clients/2.11/html-single/using_the_amq_core_protocol_jms_client/index#configuration_options
#connection.type=CORE
#connection.remoteUrl=(tcp://localhost:61616,tcp://localhost:61616)?retryInterval=100;retryIntervalMultiplier=1.0;reconnectAttempts=30;consumerWindowSize=4000

# https://activemq.apache.org/connection-configuration-uri
# https://activemq.apache.org/tcp-transport-reference
# https://activemq.apache.org/ssl-transport-reference
# https://activemq.apache.org/failover-transport-reference
#connection.type=OPENWIRE
#connection.remoteUrl=failover:(tcp://localhost:61616)?maxReconnectDelay=10000

# MQTT? Anyone?

connection.username=admin
connection.password=admin

# Connection pool by default is org.messaginghub.pooled.jms.JmsPoolConnectionFactory. Alternatively enable Spring CachingConnectionFactory
connection.useCachingConnectionFactory=false

# Only for org.messaginghub.pooled.jms.JmsPoolConnectionFactory
connection.useAnonymousProducers=false

# Only for Spring CachingConnectionFactory
connection.sessionCacheSize=${receive.concurrentConsumers}

# Pool size
connection.maxConnections=1

# Retries
exception.maximumredeliveries=0

## Receive messages
receive.enabled=true
receive.concurrentConsumers=1
receive.transacted=true
receive.queue=q1
receive.delay=0
receive.cacheLevelName=CACHE_CONSUMER
receive.endpoint=queue:${receive.queue}?concurrentConsumers=${receive.concurrentConsumers}&transacted=${receive.transacted}&cacheLevelName=${receive.cacheLevelName}&transactionManager=#myTransactionManager
# Stop process after receiving a number of messages
receive.shutdownMessageCount=0
# Stop after not receiving any messages for a while
receive.shutdownIdleSec=0

# Forward received message
receive.forward.enabled=false
receive.forward.queue=q1.forward
receive.forward.endpoint=queue:${receive.forward.queue}
receive.forward.delay=0
# TransactionManager "#myTransactionManager" is also created
# Transaction policy
receive.forward.propagation=PROPAGATION_REQUIRED

## Send messages
# Enable send route
send.enabled=true
# Send to Queue or Topic. See endpoint parameters https://camel.apache.org/components/2.x/jms-component.html
send.endpoint=queue:${receive.queue}?transacted=false
# Number of threads to send parallel
send.threads=1
# Wait time (ms) after each message
send.delay=0
# Message count per thread. Total messages sent is {send.threads} x {send.count}
send.count=10
# Message body to use
send.message=Hello World!
# Alternatively generate message body with given length (chars)
send.message.length=0
# Headers to add: {header1: "value1", header2: "value2"}
send.headers={}
# Alternatively add geneated headers with given length (chars)
send.headers.count=0
send.headers.length=0
# An extra added header with a random UUID value
send.headeruuid=_AMQ_DUPL_ID
# Stop after sending messages
send.shutdownEnabled=false

# Stop app after given time (receive or send)
shutdownSec=0

# Logging example
logging.level.bszeti.camelspringboot.jmstest=INFO
