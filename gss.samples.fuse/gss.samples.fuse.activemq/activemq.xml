<!--

     Copyright 2005-2016 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- Allows us to use system properties and fabric as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <bean class="io.fabric8.mq.fabric.ConfigurationProperties"/>
        </property>
    </bean>

<bean id="mysql-ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
<property name="url" value="jdbc:mysql://localhost/test?relaxAutoCommit=true"/>
<property name="username" value="test"/>
<property name="password" value="test"/>
<property name="maxActive" value="200"/>
<property name="poolPreparedStatements" value="true"/>
</bean>
    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="${broker-name}" dataDirectory="${data}" start="false" restartAllowed="false">

<!--01326587 begin TS's case -->

<destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic=">" producerFlowControl="true" memoryLimit="512mb">
                    <!-- The constantPendingMessageLimitStrategy is used to prevent
                         slow topic consumers to block producers and affect other consumers
                         by limiting the number of messages that are retained
                         For more information, see:

                         http://activemq.apache.org/slow-consumer-handling.html

                    -->
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit="5000"/>
                  </pendingMessageLimitStrategy>
                </policyEntry>
                <policyEntry queue=">" producerFlowControl="true" memoryLimit="50mb">
                  <!-- Use VM cursor for better latency
                       For more information, see:

                       http://activemq.apache.org/message-cursors.html-->
                  <pendingQueuePolicy>
                    <vmQueueCursor/>
                  </pendingQueuePolicy>
                </policyEntry>
              </policyEntries>
            </policyMap>
</destinationPolicy>
<!--01326587 end -->
        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>

        <ioExceptionHandler>
            <defaultIOExceptionHandler ignoreNoSpaceErrors="false"/>
        </ioExceptionHandler>


<!-- https://access.redhat.com/solutions/276323 Is it safe to delete the kahadb index file ? -->
        <persistenceAdapter>
          <kahaDB directory="activemq-data"
          journalMaxFileLength="32mb"
          checksumJournalFiles="true"
          checkForCorruptJournalFiles="true"
          />
        </persistenceAdapter>
<!-- or you can definie database persistenceAdapter--> 

<!-- 01701935 begin IndustrialB 
some times customer is using ioExceptionHandler to avoid master broker shutdown when JDBC connection is lost
       <ioExceptionHandler>
            <jDBCIOExceptionHandler stopStartConnectors="true"/>
        </ioExceptionHandler>


https://access.redhat.com/solutions/1751343 Master/slave brokers do not work correctly
https://access.redhat.com/solutions/468563 How to avoid master broker shutdown when JDBC connection is lost

http://activemq.apache.org/configurable-ioexception-handling.html 

As of ActiveMQ 5.11 the JDBCIOExceptionHandler has been deprecated. It has been replaced by the org.apache.activemq.util.LeaseLockerIOExceptionHandler that will work with any persistence adapter that supports pluggable storage lockers whether or not a locker is in use


stopStartConnectors="false" NO need to set this property since https://issues.jboss.org/browse/ENTMQ-565 has been implemented

I think now there is no need to set the ioExceptionHandler, the default behavior should be good enough

-->
       <persistenceAdapter>
         <jdbcPersistenceAdapter dataDirectory="${data}" dataSource="#mysql-ds" lockKeepAlivePeriod="5000">
           <locker>
            <lease-database-locker lockAcquireSleepInterval="10000"/>
           </locker>
         </jdbcPersistenceAdapter>
       </persistenceAdapter>

<!-- 01701935 end-->

<!-- 01663515 begin IndustrialB https://access.redhat.com/solutions/2476581

 If are not using durable topic subs, you can disable periodic cleanup with a value of cleanupPeriod="0"
 if you want to enforce not ever using durable topic subs you can
 enable broker.rejectDurableConsumers to make it explicit like below:
 -->

<persistenceAdapter>
  <jdbcPersistenceAdapter createTablesOnStartup="false"
                          lockKeepAlivePeriod="10000"
                          lockAcquireSleepInterval="5000"
                          cleanupPeriod="0"
                          dataSource="#mysql">

</jdbcPersistenceAdapter>
</persistenceAdapter>


<broker rejectDurableConsumers="true" />

<!-- 01663515 end -->


        <plugins>
            <jaasAuthenticationPlugin configuration="karaf" />
            <authorizationPlugin>
              <map>
                <authorizationMap groupClass="org.apache.karaf.jaas.boot.principal.RolePrincipal">
                  <!-- manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User -->
                  <authorizationEntries>
                    <authorizationEntry queue=">" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                    <authorizationEntry topic=">" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                    <authorizationEntry topic="ActiveMQ.Advisory.>" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" write="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" admin="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" />
                  </authorizationEntries>
                  <tempDestinationAuthorizationEntry>
                    <tempDestinationAuthorizationEntry read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                  </tempDestinationAuthorizationEntry>
                </authorizationMap>
              </map>
            </authorizationPlugin>
        </plugins>

            <systemUsage  sendFailIfNoSpace="true" >
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap="70"/>
                </memoryUsage>
<!-- it can also be wrote as: 
                <memoryUsage>
                    <memoryUsage limit="6 gb"/>
                </memoryUsage>
-->
                <storeUsage>
                    <storeUsage limit="20 gb"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="10 gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <transportConnectors>
            <transportConnector name="openwire" uri="tcp://0.0.0.0:0?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="amqp" uri="amqp://0.0.0.0:0?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="mqtt" uri="mqtt://0.0.0.0:0?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            <transportConnector name="ws" uri="ws://0.0.0.0:0?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        </transportConnectors>
    </broker>

</beans>
